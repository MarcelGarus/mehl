# Variables

"Hello, world!" print

[
  "Hi from library!" print
  {:name, :foo, :body, [ "Hi from foo!" print ]} fun
  (:export, {:foo, :}) ✨
] (:run-and-import, .) ✨
foo

###

1000 wait

[ "Hello, world!" print 5 wait ] loop

# TODO
# * imports (use)
# * loop
# * let
# * panic
# * ...
# * bools
# * logic
# * math
# * units
# * iterate
# * random
# * input
# * fibers
# * http get
# * FFI
# * wrong-usage
# * propagate-wrong-usage
# * channels
# * ambients

# Adding numbers

#(1, 2) List[Int].+


# Iterable with cycle, map, filter, take, do

# { :name, :List.Iter, :in, Any, :out, Any, :body, [[]] } fun
# An iterable: { :iter, [] }
# { :name, :List. }

# (1, 2, 3) List.Iter
#   Iter.cycle
#   [(., 2) Int.*] Iter.map
#   [(., 10) Int.>] Iter.filter
#   (., 5) Iter.take
#   [print] Iter.do


# Adding numbers

#(1, 2) +
#(1, 2, 3, 4, 5) (:iter-over-list, .) magic-primitive # TODO


# Types

#"Hello, world!" type print
#"Hello, world!" (., (3, .), .) print


# Variables

#(5, :foo) let
