(:a, "Hello, world!") let
a print

[
  "Hi from library!" print
  (:foo, "No docs", [ "Hi from foo!" print ]) pub-fun
] use

foo

({:foo, 4, :bar, 4},
  :foo, [],
  {:foo, :?a, :bar, :?a}, [("Bar", a) print],
  {}, ["Blub" print]
) match

((:true, :false) or, :false) and not print
...

[
  "Hello, world!" print
  ...
  5 wait
] loop

# Adding numbers

#(1, 2) List[Int].+

# Iterable with cycle, map, filter, take, do

# { :name, :List.Iter, :in, Any, :out, Any, :body, [[]] } fun
# An iterable: { :iter, [] }
# { :name, :List. }

# (1, 2, 3) List.Iter
#   Iter.cycle
#   [(., 2) Int.*] Iter.map
#   [(., 10) Int.>] Iter.filter
#   (., 5) Iter.take
#   [print] Iter.do

# Adding numbers

#(1, 2) +
#(1, 2, 3, 4, 5) (:iter-over-list, .) magic-primitive # TODO

# Types

#"Hello, world!" type print
